About Part 2

    Initally, the information of two employees are store in H2 database.
    As in the professor's example, we can use GET request for getting list of employees

    If you want getting all list of employees, you can use below command.

        curl -X GET http://localhost:8080/employees

    If you want to getting one employee's information, you can use 'GET' request with that employee's ID.

        curl -X GET http://localhost:8080/employees/1

    The above example is when the employee's ID is 1.
    
    If no employee has that ID, program throw EmployeeNotFoundException.

        curl -X GET http://localhost:8080/employees/99

    If you didn't post the employee information which has ID 99, you can see EmployeeNotFoundException with above request.

    
    As in the professor's example, we can use POST request to add additional data into the database.
    If you send a POST request according to the format, new information is added to the employee list, and print the added information.

        curl -X POST http://localhost:8080/employees -H 'Content-type:application/json' -d '{"name": "Samwise Gamgee", "role": "gardener"}'

    The above example is when the new employee's name is "Samwise Gamgee", and role is "gardener"

    
    As in the professor's example, we can use PUT request to update existing data in the database.
    When you send a PUT request according to the format, if there is an employee who has an entered ID, update his information and print the updated information.
    If the employee with the ID entered does not exist, then this request adds new information of new employee and print added information, such as POST request.

        curl -X PUT http://localhost:8080/employees/3 -H 'Content-type:application/json' -d '{"name": "Samwise Gamgee", "role": "ring bearer"}'

    The above example means that I want update the employee who has id 3, with name is "Samwise Gamgee" and role is "ring bearer"
    If the employee with the ID 3 does not exist, then this request run same as below request.
    
        curl -X POST http://localhost:8080/employees -H 'Content-type:application/json' -d '{"name": "Samwise Gamgee", "role": "ring bearer"}'

----------------------------------------------------------------------------------------------------------------------------------------------------------------------

About part 3

    Initially, we read three files (movies.dat, ratings.dat, users.dat), parsing the files, and load the data into MongoDB.
    There are three types of data. So I will explain the command for each type.

    1. Movie
    
        In my movie data, it has movie_id, title, genres, ratingList, numOfRating, and sumOfRating.
        When we read rating files and load this into MongoDB, all rating data load into target movie's ratingList.

        It's not hardcode.
        If you use POST request of ratings, you can see the data being added in real time.
        
        When we getting all list of movies, we print only movie's ID, title, and genres because movie data has so many information of rating.
        When we use GET request of ratings, we print only title and genres because movie data has so many information of rating.

        
        We can use GET request for getting information of movie data.
        In this request, the program print only movie's ID, title and genres.

        If you want to getting all list of movies, you can use below command.

            curl -X GET http://localhost:8080/movies

        If you want to getting one movie's information, you can use 'GET' request with that movie's ID.

            curl -X GET http://localhost:8080/movies/1

        The above example is when I want to get a movie's data which has ID 1.

        If no movie has that ID, then the program throw CannotFoundException.

            curl -X GET http://localhost:8080/movies/99999

        If you didn't post the movie data which has ID 99999, you can see CannotFoundException with above request.


        We can use Post request to add additional movie data into MongoDB.
        If you send a POST request according to the format, new information of movie data is added into MongoDB, and print the added movie data.

            curl -X POST http://localhost:8080/movies -H 'Content-type:application/json' -d '{"movie_id": 99999, "title": "Title", "genres": "Genres"}'

        The above example is when the new movie's ID is 99999, new movie's title is "Title", and new movie's genres are "Genres".

        If a movie data already exist, which has the same movie ID you want to add (In this case, 99999), then the program throw AlreadyExistException.

        
        We can use PUT request to update existing movie data in MongoDB.
        When you send a PUT request according to the format, if there is an movie data who has an entered movie ID, update that movie's data and print the updated movie data.

            curl -X PUT http://localhost:8080/movies/99999 -H 'Content-type:application/json' -d '{"movie_id": 99999, "title": "Title", "genres": "Genres"}'

        The above example means that I want update the movie data which has ID 99999, with title is "Title" and genres are "Genres".

        If no movie has this ID (99999), then the program throw CannotFoundException.
        If we try to change movie's ID, then the program throw CannotChangeIDException.


    2. User

        In my user data, it has user_id, gender, age, occupation, and zip_code.

        We can use GET request for getting information of user data.

        If you want to getting all list of users, you can use below command.

            curl -X GET http://localhost:8080/users

        If you want to getting one user's information, you can use 'GET' request with that user's ID.

            curl -X GET http://localhost:8080/users/1

        The above example is when I want to get a user's data which has ID 1.

        If no user has that ID, then the program throw CannotFoundException.

            curl -X GET http://localhost:8080/users/99999

        If you didn't post the user data who has ID 99999, you can see CannotFoundException with above request.


        We can use Post request to add additional user data into MongoDB.
        If you send a POST request according to the format, new information of user data is added into MongoDB, and print the added user data.

            curl -X POST http://localhost:8080/users -H 'Content-type:application/json' -d '{"user_id": 99999, "gender": "Gender", "age": 100, "occupation": "Occupation", "zip_code": "Zip_Code"}'

        The above example is when the new user's ID is 99999, new user's gender is "Gender", new user's age is 100, new user's occupation is "Occupation", and new user's zip_code is "Zip_code".

        If user's ID is less than 1, then the program throw NotInRangeException.
        If a user data already exist, which has the same user ID you want to add (In this case, 99999), then the program throw AlreadyExistException.

        
        We can use PUT request to update existing user data in MongoDB.
        When you send a PUT request according to the format, if there is an user data who has an entered user ID, update that user's data and print the updated user data.

            curl -X PUT http://localhost:8080/users/99999 -H 'Content-type:application/json' -d '{"user_id": 99999, "gender": "Gender", "age": 100, "occupation": "Occupation", "zip_code": "Zip_Code"}'

        The above example means that I want update the user data which has ID 99999, with gender is "Gender", age is 100, occupation is "Occupation", and zip_code is "Zip_code".

        If no user has this ID (99999), then the program throw CannotFoundException.
        If we try to change user's ID, then the program throw CannotChangeIDException.

    
    3. Rating

        In my rating data, it has user_id, movie_id, and rate.

        We can use GET request to get the list of those movies rated greater than or equal to the given rating score.
        In this request, the program print only title and genres.
        
            curl -X GET http://localhost:8080/ratings/4

        The above example means that I want to get list of movies which rated greater than or equal to 4.
        
        If the given rating score (In this case, 4) is not a scala of 1 to 5, then the program throw NotInRangeException.
        If there is no movie data that satisfys the condition, then the program throw NoSatisfactoryMovieException.


        We can use POST request to add additional rating data into MongoDB.
        If you send a POST request according to the format, new information of rating data is added into MongoDB, and print the added rating data.

            curl -X POST http://localhost:8080/ratings -H 'Content-type:application/json' -d '{"user_id": 1, "movie_id": 2, "rate": 3}'

        The above example is when the user's ID is 1 who left the new rating, the target movie's ID is 2 which lefted the new rating, and that rate is 3.

        If the target movie data is not exist, then the program throw CannotFoundException.
        If the user who has user_id already left rating to the target movie, then the program throw AlreadyExistException.


        We can use PUT request to update existing rating data in MongoDB.
        When you send a PUT request according to the format, if there is an rating data who has an entered user ID and movie ID, update that rating's data and print the updated rating data.

            curl -X PUT http://localhost:8080/ratings -H 'Content-type:application/json' -d '{"user_id": 1, "movie_id": 2, "rate": 4}'

        The above example means that I want to change the rating of user who has ID 1 to movie which has ID 2 with rate 4.

        If the target movie data is not exist, then the program throw CannotFoundException.
        If the user has this user_id (1) does not left the rating to movie has this movie_id (2), then the program throw CannotFoundException.